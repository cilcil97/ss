public class Trilateration {    public static void main(String[] args) {        Circle circle = new Circle(new Point(4, 5), 10);        System.out.println(circle);        double lel = getTwoPointsDistance(circle.getCenter(), circle.getCenter());        System.out.println(lel);    }    public static double getTwoPointsDistance(Point p1, Point p2) {        return Math.sqrt(Math.pow((p1.getX() - p2.getX()), 2) + Math.pow((p1.getY() - p2.getY()), 2));    }    //    public double getTwoCirclesIntersectingPoints(Circle c1, Circle c2) {        Point p1 = c1.getCenter();        Point p2 = c2.getCenter();        int r1 = c1.getRadius();        int r2 = c2.getRadius();        double d = getTwoPointsDistance(p1, p2);        if (d >= (r1 + r2) || d <= Math.abs(r1 - r2))            return 0;        double a = (Math.pow(r1, 2) - Math.pow(r2, 2) + Math.pow(d, 2)) / (2 * d);        double h = Math.sqrt(Math.pow(r1, 2) - Math.pow(a, 2));        double x0 = p1.getX() + a * (p2.getX() - p1.getX()) / d;        double y0 = p1.getY() + p1.getY();        return 1;    }}class Point {    private int x;    private int y;    public Point(int x, int y) {        this.x = x;        this.y = y;    }    @Override    public String toString() {        return "Point{" +                "x=" + x +                ", y=" + y +                '}';    }    public int getX() {        return x;    }    public int getY() {        return y;    }    public void setX(int x) {        this.x = x;    }    public void setY(int y) {        this.y = y;    }}class Circle {    private Point center;    private int radius;    public Circle(Point center, int radius) {        this.center = center;        this.radius = radius;    }    @Override    public String toString() {        return "Circle{" +                "center=" + center.toString() +                ", radius=" + radius +                '}';    }    public Point getCenter() {        return center;    }    public int getRadius() {        return radius;    }}